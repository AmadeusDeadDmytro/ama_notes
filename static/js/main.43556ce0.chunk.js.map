{"version":3,"sources":["constants/enums.ts","actions/index.ts","styles/colors.ts","helpers/index.ts","contexts/KeyboardContext.tsx","containers/AppSidebar.tsx","helpers/hooks.ts","containers/KeyboardShortcuts.tsx","containers/NoteEditor.tsx","containers/NoteOptions.tsx","constants/index.ts","containers/NoteList.tsx","styles/base.ts","containers/SettingsModal.tsx","containers/App.tsx","reducers/categoryReducer.ts","reducers/noteReducer.ts","reducers/syncReducer.ts","reducers/themeReducer.ts","reducers/settingsReducer.ts","reducers/index.ts","api/index.ts","sagas/index.ts","index.tsx"],"names":["Actions","Folders","loadNotesSuccess","notes","type","LOAD_NOTES_SUCCESS","payload","addNote","note","ADD_NOTE","toggleTrashedNote","noteId","TOGGLE_TRASHED_NOTE","swapNote","SWAP_NOTE","swapCategory","categoryId","SWAP_CATEGORY","loadCategoriesSuccess","categories","LOAD_CATEGORIES_SUCCESS","syncState","SYNC_STATE","toggleDarkTheme","TOGGLE_DARK_THEME","toggleSettingsModal","TOGGLE_SETTINGS_MODAL","colors","PRIMARY","A_COLOR_ONE","darkTheme","A_COLOR_TWO","A_COLOR_THREE","A_COLOR_FOUR","A_COLOR_FIVE","A_COLOR_SIX","A_COLOR_SEVEN","A_COLOR_EIGHT","A_COLOR_NINE","A_COLOR_TEN","A_COLOR_ELEVEN","getNoteTitle","text","noteText","match","downloadNote","filename","pom","document","createElement","setAttribute","encodeURIComponent","created","lastUpdated","category","noteWithFrontmatter","createEvent","event","initEvent","dispatchEvent","click","sortByLastUpdated","a","b","dateA","Date","dateB","newNote","folder","id","uuid","moment","format","favorite","FAVORITES","initialContextValue","addingTempCategory","setAddingTempCategory","adding","KeyboardContext","createContext","useKeyboard","context","useContext","Error","KeyboardProvider","children","useState","value","Provider","iconColor","connect","state","activeNote","noteState","find","activeNoteId","activeFolder","activeCategoryId","categoryState","isDarkTheme","themeState","dark","dispatch","swapFolder","SWAP_FOLDER","addCategory","ADD_CATEGORY","deleteCategory","DELETE_CATEGORY","pruneCategoryFromNotes","PRUNE_CATEGORY_FROM_NOTES","tempCategory","setTempCategory","onSubmit","preventDefault","kebabCase","name","cat","syncNotesHandler","AppSidebarContainer","AppSidebarMain","AppSidebarLink","onClick","ALL","active","size","style","marginRight","color","TRASH","CategoryTitle","CategoryTitleH2","AddCategoryButton","CategoryListContainer","map","CategoryEach","notesForNewCategory","filter","trash","newNoteId","length","CategoryEachName","CategoryOptions","notesNotTrash","AddCategoryForm","CategoryNameInput","placeholder","autoFocus","onChange","target","onBlur","AppSidebarActions","ActionButton","styled","div","Colors","aside","section","h2","button","form","input","noop","useKey","key","action","actionRef","useRef","current","useEffect","mousetrap","bindGlobal","unbind","syncing","newNoteHandler","loading","codeMirrorOptions","settingsState","updateNote","UPDATE_NOTE","EmptyEditor","Editor","className","options","editorDidMount","editor","focus","setCursor","onBeforeChange","data","EmptyEditorCenter","CodeMirror","deleteNote","DELETE_NOTE","toggleFavoriteNote","TOGGLE_FAVORITE_NOTE","clickedNote","NoteOptionsNav","NavButton","nav","folderMap","filteredNotes","CATEGORY","sort","activeCategory","filteredCategories","pruneNotes","PRUNE_NOTES","addCategoryToNote","ADD_CATEGORY_TO_NOTE","noteOptionsId","setNoteOptionsId","node","handleNoteOptionsClick","stopPropagation","contains","addEventListener","removeEventListener","NoteSidebar","NoteSidebarHeader","NoteListContainer","noteTitle","NoteEach","NoteOptionsDiv","NoteOptionsContext","ref","ContextActionTitle","SelectElement","defaultValue","SelectElementOption","disabled","select","option","Vbetween","Switch","label","Slider","span","round","SwitchInput","isOpen","updateCodeMirrorOption","UPDATE_CODE_MIRROR_OPTION","handleDomClick","Dimmer","SettingsModalContainer","H2","SettingsOptions","SettingsLabel","checked","keyMap","loadNotes","LOAD_NOTES","loadCategories","LOAD_CATEGORIES","theme","AppContainer","initialState","error","categoryReducer","LOAD_CATEGORIES_ERROR","UPDATE_CATEGORY","noteReducer","getFirstNote","LOAD_NOTES_ERROR","getNewNoteId","undefined","firstNoteCategory","firstNoteFavorite","firstNoteTrash","oldNoteId","deletedNoteIndex","findIndex","newActiveNoteId","syncReducer","SYNC_STATE_SUCCESS","SYNC_STATE_ERROR","themeReducer","mode","lineNumbers","lineWrapping","styleActiveLine","nonEmpty","viewportMargin","Infinity","settingsReducer","rootReducer","combineReducers","saveState","Promise","resolve","reject","localStorage","setItem","JSON","stringify","parse","getItem","fetchNotes","fetchCategories","postState","allSaga","message","put","all","takeLatest","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","run","rootSaga","render","getElementById"],"mappings":"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","file":"static/js/main.43556ce0.chunk.js","sourcesContent":["export enum Actions {\n    ADD_NOTE = 'ADD_NOTE',\n    SWAP_NOTE = 'SWAP_NOTE',\n    UPDATE_NOTE = 'UPDATE_NOTE',\n    TOGGLE_TRASHED_NOTE = 'TOGGLE_TRASHED_NOTE ',\n    TOGGLE_FAVORITE_NOTE = 'TOGGLE_FAVORITE_NOTE',\n    DELETE_NOTE = 'DELETE_NOTE',\n    PRUNE_NOTES = 'PRUNE_NOTES',\n    ADD_CATEGORY_TO_NOTE = 'ADD_CATEGORY_TO_NOTE',\n    PRUNE_CATEGORY_FROM_NOTES = 'PRUNE_CATEGORY_FROM_NOTES',\n    SWAP_FOLDER = 'SWAP_FOLDER',\n\n    ADD_CATEGORY = 'ADD_CATEGORY',\n    SWAP_CATEGORY = 'SWAP_CATEGORY',\n    UPDATE_CATEGORY = 'UPDATE_CATEGORY',\n    DELETE_CATEGORY = 'DELETE_CATEGORY',\n\n    TOGGLE_DARK_THEME = 'TOGGLE_DATK_THEME',\n\n    TOGGLE_SETTINGS_MODAL = 'TOGGLE_SETTINGS_MODAL',\n    UPDATE_CODE_MIRROR_OPTION = 'UPDATE_CODE_MIRROR_OPTION',\n\n    // Sagas\n    LOAD_NOTES = 'LOAD_NOTES',\n    LOAD_NOTES_SUCCESS = 'LOAD_NOTES_SUCCESS',\n    LOAD_NOTES_ERROR = 'LOAD_NOTES_ERROR',\n\n    LOAD_CATEGORIES = 'LOAD_CATEGORY',\n    LOAD_CATEGORIES_SUCCESS = 'LOAD_CATEGORY_SUCCESS',\n    LOAD_CATEGORIES_ERROR = 'LOAD_CATEGORY_ERROR',\n\n    SYNC_STATE = 'SYNC_STATE',\n    SYNC_STATE_SUCCESS = 'SYNC_STATE_SUCCESS',\n    SYNC_STATE_ERROR = 'SYNC_STATE_ERROR',\n}\n\nexport enum Folders {\n    ALL = 'ALL',\n    TRASH = 'TRASH',\n    FAVORITES = 'FAVORITES',\n    CATEGORY = 'CATEGORY',\n}\n","import { CategoryItem, NoteItem } from 'types'\n\nimport { Actions } from 'constants/enums'\n\n// =================================================================================================================\n// Записи\n// =================================================================================================================\n\nexport const loadNotes = () => ({\n    type: Actions.LOAD_NOTES,\n})\n\nexport const loadNotesSuccess = (notes: NoteItem[]) => ({\n    type: Actions.LOAD_NOTES_SUCCESS,\n    payload: notes,\n})\n\nexport const loadNotesError = (error: string) => ({\n    type: Actions.LOAD_NOTES_ERROR,\n    payload: error,\n})\n\nexport const addNote = (note: NoteItem) => ({\n    type: Actions.ADD_NOTE,\n    payload: note,\n})\n\nexport const deleteNote = (noteId: string) => ({\n    type: Actions.DELETE_NOTE,\n    payload: noteId,\n})\n\nexport const updateNote = (note: NoteItem) => ({\n    type: Actions.UPDATE_NOTE,\n    payload: note,\n})\n\nexport const toggleTrashedNote = (noteId: string) => ({\n    type: Actions.TOGGLE_TRASHED_NOTE,\n    payload: noteId,\n})\n\nexport const toggleFavoriteNote = (noteId: string) => ({\n    type: Actions.TOGGLE_FAVORITE_NOTE,\n    payload: noteId,\n})\n\nexport const swapNote = (noteId: string) => ({\n    type: Actions.SWAP_NOTE,\n    payload: noteId,\n})\n\nexport const swapCategory = (categoryId: string) => ({\n    type: Actions.SWAP_CATEGORY,\n    payload: categoryId,\n})\n\nexport const pruneNotes = () => ({\n    type: Actions.PRUNE_NOTES,\n})\n\nexport const pruneCategoryFromNotes = (categoryId: string) => ({\n    type: Actions.PRUNE_CATEGORY_FROM_NOTES,\n    payload: categoryId,\n})\n\nexport const addCategoryToNote = (categoryId: string, noteId: string) => ({\n    type: Actions.ADD_CATEGORY_TO_NOTE,\n    payload: { categoryId, noteId },\n})\n\nexport const swapFolder = (folder: string) => ({\n    type: Actions.SWAP_FOLDER,\n    payload: folder,\n})\n\n// =================================================================================================================\n// Категории\n// =================================================================================================================\n\nexport const addCategory = (category: CategoryItem) => ({\n    type: Actions.ADD_CATEGORY,\n    payload: category,\n})\n\nexport const deleteCategory = (categoryId: string) => ({\n    type: Actions.DELETE_CATEGORY,\n    payload: categoryId,\n})\n\nexport const loadCategories = () => ({\n    type: Actions.LOAD_CATEGORIES,\n})\n\nexport const loadCategoriesSuccess = (categories: CategoryItem[]) => ({\n    type: Actions.LOAD_CATEGORIES_SUCCESS,\n    payload: categories,\n})\n\nexport const loadCategoriesError = (error: string) => ({\n    type: Actions.LOAD_CATEGORIES_ERROR,\n})\n\n// =================================================================================================================\n// Синхронизация\n// =================================================================================================================\n\nexport const syncState = (notes: NoteItem[], categories: CategoryItem[]) => ({\n    type: Actions.SYNC_STATE,\n    payload: { notes, categories },\n})\n\nexport const syncStateSuccess = () => ({\n    type: Actions.SYNC_STATE_SUCCESS,\n})\n\nexport const syncStateError = (error: string) => ({\n    type: Actions.SYNC_STATE_ERROR,\n    payload: error,\n})\n\n// =================================================================================================================\n// Тема\n// =================================================================================================================\n\nexport const toggleDarkTheme = () => ({\n    type: Actions.TOGGLE_DARK_THEME,\n})\n\n// =================================================================================================================\n// Настройки\n// =================================================================================================================\n\nexport const toggleSettingsModal = () => ({\n    type: Actions.TOGGLE_SETTINGS_MODAL,\n})\n\nexport const updateCodeMirrorOption = (key: string, value: string) => ({\n    type: Actions.UPDATE_CODE_MIRROR_OPTION,\n    payload: { key, value },\n})\n","const colors = {\n    PRIMARY: '#7e8d2e',\n    A_COLOR_ONE: (darkTheme = false) => (darkTheme ? '#c4c4c4' : '#F2E49B'), /// 888\n    A_COLOR_TWO: (darkTheme = false) => (darkTheme ? '#292929' : '#F2BF27'), /// eee\n    A_COLOR_THREE: (darkTheme = false) => (darkTheme ? '#695252' : '#8C470B'), /// 444\n    A_COLOR_FOUR: (darkTheme = false) => (darkTheme ? '#292929' : '#0f345c'), /// 333\n    A_COLOR_FIVE: (darkTheme = false) => (darkTheme ? '#111111' : '#1a202d'), /// bbb\n    A_COLOR_SIX: (darkTheme = false) => (darkTheme ? '#b8b8b8' : '#373323'), /// 222\n    A_COLOR_SEVEN: (darkTheme = false) => (darkTheme ? '#777676' : '#5a1810'), /// 202020\n    A_COLOR_EIGHT: (darkTheme = false) => (darkTheme ? '#ecebeb' : '#fdde6c'), /// 6ab0f3\n    A_COLOR_NINE: (darkTheme = false) => (darkTheme ? '#b8b8b8' : '#F8f22f'), /// ccc\n    A_COLOR_TEN: (darkTheme = false) => (darkTheme ? '#ecebeb' : '#d4d4ce'), /// f5f5f5\n    A_COLOR_ELEVEN: (darkTheme = false) => (darkTheme ? '#ecebeb' : '#ccd798'), /// ddd\n}\n\nexport default colors\n","import { Folders } from 'constants/enums'\nimport { NoteItem } from 'types'\nimport moment from 'moment'\nimport { v4 as uuid } from 'uuid'\n\nexport const getNoteTitle = (text: string): string => {\n    const noteTitleRegEx = /[\\w`?!., ]{1,50}/\n\n    let noteTitle: string\n    let noteText = text.match(noteTitleRegEx)\n\n    if (!noteText) {\n        noteTitle = 'Новая запись'\n    } else {\n        noteTitle = noteText[0]\n    }\n    return noteTitle\n}\n\nexport function noteWithFrontmatter(note: NoteItem): string {\n    return `---\nЗаголовок: ${getNoteTitle(note.text)}\nСоздано: ${note.created}\nИзменено: ${note.lastUpdated}\nКатегория: ${note.category ? note.category : ''}\n---\n\n${note.text}\n`\n}\n\nexport const downloadNote = (filename: string, note: NoteItem): void => {\n    const pom = document.createElement('a')\n    pom.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(noteWithFrontmatter(note)))\n    pom.setAttribute('download', `${filename}.md`)\n\n    if (document.createEvent) {\n        const event = document.createEvent('MouseEvents')\n        event.initEvent('click', true, true)\n        pom.dispatchEvent(event)\n    } else {\n        pom.click()\n    }\n}\n\nexport const sortByLastUpdated = (a: NoteItem, b: NoteItem) => {\n    let dateA = new Date(a.lastUpdated)\n    let dateB = new Date(b.lastUpdated)\n\n    return dateA > dateB ? -1 : dateA < dateB ? 1 : 0\n}\n\nexport const newNote = (categoryId?: string, folder?: string) => ({\n    id: uuid(),\n    text: '',\n    created: moment().format(),\n    lastUpdated: moment().format(),\n    category: categoryId,\n    favorite: folder === Folders.FAVORITES,\n})\n","import React, { createContext, useContext, useState } from 'react'\n\ninterface KeyboardContextInterface {\n    addingTempCategory: boolean\n    setAddingTempCategory(adding: boolean): void\n}\n\nconst initialContextValue = {\n    addingTempCategory: false,\n    setAddingTempCategory: (adding: boolean) => undefined,\n}\n\nconst KeyboardContext = createContext<KeyboardContextInterface>(initialContextValue)\n\nconst useKeyboard = () => {\n    const context = useContext(KeyboardContext)\n    if (!context) {\n        throw new Error('useKeyboard must be used within a KeyboardContext')\n    }\n    return context\n}\n\nconst KeyboardProvider: React.FC = ({ children }) => {\n    const [addingTempCategory, setAddingTempCategory] = useState(false)\n    const value: KeyboardContextInterface = {\n        addingTempCategory,\n        setAddingTempCategory,\n    }\n    return <KeyboardContext.Provider value={value}>{children}</KeyboardContext.Provider>\n}\n\nexport { KeyboardProvider, useKeyboard }\n","import { ApplicationState, CategoryItem, NoteItem } from 'types'\nimport { Book, Bookmark, Folder, Plus, Settings, Trash2, UploadCloud, X } from 'react-feather'\nimport React, { useState } from 'react'\nimport { addCategory, addNote, deleteCategory, pruneCategoryFromNotes, swapCategory, swapFolder, swapNote, syncState, toggleSettingsModal } from 'actions'\n\nimport Colors from 'styles/colors'\nimport { Dispatch } from 'redux'\nimport { Folders } from 'constants/enums'\nimport { connect } from 'react-redux'\nimport kebabCase from 'lodash/kebabCase'\nimport { newNote } from 'helpers'\nimport styled from 'styled-components'\nimport { useKeyboard } from 'contexts/KeyboardContext'\n\nconst iconColor = 'rgba(255, 255, 255, 0.3)'\n\ninterface AppProps {\n    addNote: (note: NoteItem) => void\n    addCategory: (category: CategoryItem) => void\n    deleteCategory: (categoryId: string) => void\n    pruneCategoryFromNotes: (categoryId: string) => void\n    swapCategory: (categoryId: string) => void\n    swapFolder: (folder: string) => void\n    swapNote: (swapNote: string) => void\n    syncState: (notes: NoteItem[], categories: CategoryItem[]) => void\n    activeNote?: NoteItem\n    notes: NoteItem[]\n    categories: CategoryItem[]\n    activeCategoryId: string\n    activeFolder: string\n    toggleSettingsModal: () => void\n    isDarkTheme: boolean\n}\n\nconst AppSidebar: React.FC<AppProps> = ({\n    addNote,\n    activeNote,\n    syncState,\n    addCategory,\n    deleteCategory,\n    pruneCategoryFromNotes,\n    swapCategory,\n    swapFolder,\n    swapNote,\n    notes,\n    categories,\n    activeCategoryId,\n    activeFolder,\n    toggleSettingsModal,\n    isDarkTheme,\n}) => {\n    const { addingTempCategory, setAddingTempCategory } = useKeyboard()\n    const [tempCategory, setTempCategory] = useState('')\n\n    const newTempCategoryHandler = () => {\n        !addingTempCategory && setAddingTempCategory(true)\n    }\n\n    const onSubmit = (event: React.FormEvent<HTMLFormElement> | React.FocusEvent<HTMLInputElement>) => {\n        event.preventDefault()\n\n        const category = { id: kebabCase(tempCategory), name: tempCategory }\n\n        if (!categories.find((cat) => cat.id === kebabCase(tempCategory))) {\n            addCategory(category)\n            setTempCategory('')\n            setAddingTempCategory(false)\n        }\n    }\n\n    const newNoteHandler = () => {\n        if ((activeNote && activeNote.text !== '') || !activeNote) {\n            const note = newNote(activeCategoryId, activeFolder)\n\n            addNote(note)\n            swapNote(note.id)\n        }\n    }\n\n    const syncNotesHandler = () => {\n        syncState(notes, categories)\n    }\n\n    const settingsHandler = () => {\n        toggleSettingsModal()\n    }\n\n    return (\n        <AppSidebarContainer darkTheme={isDarkTheme}>\n            <AppSidebarMain>\n                <AppSidebarLink onClick={() => swapFolder(Folders.ALL)} active={activeFolder === Folders.ALL} darkTheme={isDarkTheme}>\n                    <Book size={15} style={{ marginRight: '.75rem' }} color={iconColor} />\n                    Все заметки\n                </AppSidebarLink>\n                <AppSidebarLink onClick={() => swapFolder(Folders.FAVORITES)} active={activeFolder === Folders.FAVORITES} darkTheme={isDarkTheme}>\n                    <Bookmark size={15} style={{ marginRight: '.75rem' }} color={iconColor} />\n                    Избранные\n                </AppSidebarLink>\n                <AppSidebarLink onClick={() => swapFolder(Folders.TRASH)} active={activeFolder === Folders.TRASH} darkTheme={isDarkTheme}>\n                    <Trash2 size={15} style={{ marginRight: '.75rem' }} color={iconColor} />\n                    Корзина\n                </AppSidebarLink>\n\n                <CategoryTitle>\n                    <CategoryTitleH2 darkTheme={isDarkTheme}>Категории</CategoryTitleH2>\n                    <AddCategoryButton onClick={newTempCategoryHandler}>\n                        <Plus size={15} color={iconColor} />\n                    </AddCategoryButton>\n                </CategoryTitle>\n\n                <CategoryListContainer>\n                    {categories.map((category) => {\n                        return (\n                            <CategoryEach\n                                key={category.id}\n                                darkTheme={isDarkTheme}\n                                active={category.id === activeCategoryId}\n                                onClick={() => {\n                                    const notesForNewCategory = notes.filter((note) => !note.trash && note.category === category.id)\n                                    const newNoteId = notesForNewCategory.length > 0 ? notesForNewCategory[0].id : ''\n\n                                    if (category.id !== activeCategoryId) {\n                                        swapCategory(category.id)\n                                        swapNote(newNoteId)\n                                    }\n                                }}\n                            >\n                                <CategoryEachName>\n                                    <Folder size={15} style={{ marginRight: '.75rem' }} color={iconColor} />\n                                    {category.name}\n                                </CategoryEachName>\n                                <CategoryOptions\n                                    onClick={() => {\n                                        const notesNotTrash = notes.filter((note) => !note.trash)\n                                        const newNoteId = notesNotTrash.length > 0 ? notesNotTrash[0].id : ''\n\n                                        deleteCategory(category.id)\n                                        pruneCategoryFromNotes(category.id)\n                                        swapFolder(Folders.ALL)\n                                        swapNote(newNoteId)\n                                    }}\n                                >\n                                    <X size={12} />\n                                </CategoryOptions>\n                            </CategoryEach>\n                        )\n                    })}\n                </CategoryListContainer>\n\n                {addingTempCategory && (\n                    <AddCategoryForm onSubmit={onSubmit}>\n                        <CategoryNameInput\n                            placeholder=\"Имя категории...\"\n                            darkTheme={isDarkTheme}\n                            autoFocus\n                            onChange={(event) => {\n                                setTempCategory(event.target.value)\n                            }}\n                            onBlur={(event) => {\n                                if (!tempCategory) {\n                                    setAddingTempCategory(false)\n                                } else {\n                                    onSubmit(event)\n                                }\n                            }}\n                        />\n                    </AddCategoryForm>\n                )}\n                <AppSidebarActions onClick={syncNotesHandler}>\n                    <ActionButton onClick={newNoteHandler} darkTheme={isDarkTheme}>\n                        {activeFolder !== Folders.TRASH && <Plus size={18} style={{ marginRight: '.5rem' }} color={iconColor} />}\n                    </ActionButton>\n                    <ActionButton onClick={syncNotesHandler} darkTheme={isDarkTheme}>\n                        <UploadCloud size={18} style={{ marginRight: '.5rem' }} color={iconColor} />\n                    </ActionButton>\n                    <ActionButton darkTheme={isDarkTheme}>\n                        <Settings size={18} style={{ marginRight: '.5rem' }} color={iconColor} onClick={settingsHandler} />\n                    </ActionButton>\n                </AppSidebarActions>\n            </AppSidebarMain>\n        </AppSidebarContainer>\n    )\n}\n\nconst mapStateToProps = (state: ApplicationState) => ({\n    activeNote: state.noteState.notes.find((note) => note.id === state.noteState.activeNoteId),\n    activeFolder: state.noteState.activeFolder,\n    activeCategoryId: state.noteState.activeCategoryId,\n    categories: state.categoryState.categories,\n    notes: state.noteState.notes,\n    isDarkTheme: state.themeState.dark,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    addNote: (note: NoteItem) => dispatch(addNote(note)),\n    swapNote: (noteId: string) => dispatch(swapNote(noteId)),\n    swapCategory: (categoryId: string) => dispatch(swapCategory(categoryId)),\n    swapFolder: (folder: string) => dispatch(swapFolder(folder)),\n    addCategory: (category: CategoryItem) => dispatch(addCategory(category)),\n    deleteCategory: (categoryId: string) => dispatch(deleteCategory(categoryId)),\n    pruneCategoryFromNotes: (categoryId: string) => dispatch(pruneCategoryFromNotes(categoryId)),\n    syncState: (notes: NoteItem[], categories: CategoryItem[]) => dispatch(syncState(notes, categories)),\n    toggleSettingsModal: () => dispatch(toggleSettingsModal()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppSidebar)\n\nconst AppSidebarActions = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin: 3rem 0 1rem;\n    flex-wrap: wrap;\n`\n\nconst ActionButton = styled.div<{ darkTheme: boolean }>`\n    svg {\n        cursor: pointer;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background: ${({ darkTheme }) => Colors.A_COLOR_SEVEN(darkTheme)};\n        padding: 0.7rem;\n        border-radius: 50%;\n        stroke: rgba(255, 255, 255, 0.7);\n        margin: 0 0.25rem;\n\n        &:hover {\n            stroke: ${Colors.A_COLOR_EIGHT()};\n            background: ${({ darkTheme }) => Colors.A_COLOR_FOUR(darkTheme)};\n        }\n    }\n`\n\nconst AppSidebarContainer = styled.aside<{ darkTheme: boolean }>`\n    padding: 1rem 0 0.25rem;\n    grid-area: app-sidebar;\n    background: ${({ darkTheme }) => Colors.A_COLOR_FOUR(darkTheme)};\n    color: rgba(255, 255, 255, 0.8);\n    display: flex;\n    flex-direction: column;\n`\n\nconst AppSidebarLink = styled.div<{ active?: boolean; darkTheme: boolean }>`\n    display: flex;\n    align-items: center;\n    padding: 0 0.5rem;\n    cursor: pointer;\n    font-size: 0.9rem;\n    font-weight: 600;\n    background: ${({ active, darkTheme }) => (active ? Colors.A_COLOR_SEVEN(darkTheme) : '')};\n    color: ${({ darkTheme }) => Colors.A_COLOR_TEN(darkTheme)};\n\n    &:hover {\n        background: ${({ darkTheme }) => Colors.A_COLOR_THREE(darkTheme)};\n        color: ${({ darkTheme }) => Colors.A_COLOR_TEN(darkTheme)};\n    }\n`\n\nconst AppSidebarMain = styled.section`\n    flex: 1;\n`\n\nconst CategoryTitle = styled.div`\n    margin-top: 1rem;\n    padding: 0.5rem;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n`\n\nconst CategoryTitleH2 = styled.h2<{ darkTheme: boolean }>`\n    margin: 0;\n    color: ${({ darkTheme }) => Colors.A_COLOR_ONE(darkTheme)};\n    text-transform: uppercase;\n    font-size: 0.7rem;\n`\n\nconst AddCategoryButton = styled.button`\n    cursor: pointer;\n    -webkit-appearance: none;\n    padding: 0;\n    color: rgba(255, 255, 255, 0.8);\n    background: transparent;\n    font-size: 1rem;\n    border: none;\n    line-height: 1;\n\n    svg:hover {\n        stroke: white;\n    }\n`\n\nconst CategoryListContainer = styled.div`\n    font-size: 0.9rem;\n`\n\nconst CategoryOptions = styled.div`\n    color: transparent;\n    z-index: 1;\n    cursor: pointer;\n`\n\nconst CategoryEachName = styled.div`\n    display: flex;\n    align-items: center;\n`\n\nconst CategoryEach = styled.div<{ active: boolean; darkTheme: boolean }>`\n    cursor: pointer;\n    padding: 0.5rem;\n    color: rgba(255, 255, 255, 0.8);\n    background: ${({ active, darkTheme }) => active && Colors.A_COLOR_SEVEN(darkTheme)};\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    &:last-of-type {\n        border-bottom: none;\n    }\n\n    &:hover {\n        background: ${({ darkTheme }) => Colors.A_COLOR_THREE(darkTheme)};\n        color: ${({ darkTheme }) => Colors.A_COLOR_TEN(darkTheme)};\n\n        ${CategoryOptions} {\n            color: ${({ darkTheme }) => Colors.A_COLOR_TEN(darkTheme)};\n        }\n    }\n\n    ${CategoryEachName} {\n        svg {\n            ${({ active }) => active && 'stroke: ' + Colors.PRIMARY};\n        }\n    }\n`\n\nconst AddCategoryForm = styled.form``\n\nconst CategoryNameInput = styled.input<{ darkTheme: boolean }>`\n    background: rgba(0, 0, 0, 0.2);\n    border: 1px solid ${({ darkTheme }) => Colors.A_COLOR_ONE(darkTheme)};\n    padding: 0.5rem;\n    font-size: 0.9rem;\n    border-radius: 4px;\n    -webkit-appearance: none;\n    color: ${Colors.A_COLOR_TWO()};\n    line-height: 1;\n    margin-top: 0.5rem;\n    margin-left: 1rem;\n    width: 120px;\n\n    &:active,\n    &:focus {\n        border-color: ${Colors.PRIMARY};\n        outline: 0;\n        box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\n    }\n`\n","import mousetrap from 'mousetrap'\nimport 'mousetrap-global-bind'\n\nimport { useEffect, useRef } from 'react'\n\nconst noop = () => {}\n\nexport const useInterval = (callback: () => void, delay: number | null) => {\n    const savedCallback = useRef(noop)\n\n    // Запоминаем последний коллбэк\n    useEffect(() => {\n        savedCallback.current = callback\n    }, [callback])\n\n    useEffect(() => {\n        const tick = () => savedCallback.current()\n\n        if (delay !== null) {\n            const id = setInterval(tick, delay)\n\n            return () => clearInterval(id)\n        }\n    }, [delay])\n}\n\nexport const useKey = (key: string, action: () => void) => {\n    let actionRef = useRef(noop)\n    actionRef.current = action\n\n    useEffect(() => {\n        mousetrap.bindGlobal(key, () => {\n            if (!actionRef.current) return\n            actionRef.current()\n        })\n        return () => {\n            mousetrap.unbind(key)\n        }\n    }, [key])\n}\n","import { ApplicationState, CategoryItem, NoteItem } from 'types'\nimport { addNote, toggleTrashedNote, swapNote, syncState, toggleDarkTheme } from 'actions'\nimport { downloadNote, getNoteTitle, newNote } from 'helpers'\n\nimport { Dispatch } from 'redux'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { useKey } from 'helpers/hooks'\nimport { useKeyboard } from 'contexts/KeyboardContext'\n\ninterface KeyboardShortcutsProps {\n    addNote: (note: NoteItem) => void\n    swapNote: (noteId: string) => void\n    toggleTrashedNote: (noteId: string) => void\n    syncState: (notes: NoteItem[], categories: CategoryItem[]) => void\n    activeNote?: NoteItem\n    activeCategoryId: string\n    activeFolder: string\n    notes: NoteItem[]\n    categories: CategoryItem[]\n    syncing: boolean\n    toggleDarkTheme: () => void\n}\n\nconst KeyboardShortcuts: React.FC<KeyboardShortcutsProps> = ({ activeNote, activeCategoryId, activeFolder, toggleDarkTheme, addNote, swapNote, toggleTrashedNote, syncState, notes, categories }) => {\n    const { addingTempCategory, setAddingTempCategory } = useKeyboard()\n    const newNoteHandler = () => {\n        const note = newNote(activeCategoryId, activeFolder)\n\n        if ((activeNote && activeNote.text !== '' && !activeNote.trash) || !activeNote) {\n            addNote(note)\n            swapNote(note.id)\n        }\n    }\n\n    const newTempCategoryHandler = () => {\n        !addingTempCategory && setAddingTempCategory(true)\n    }\n\n    const trashNoteHandler = () => {\n        if (activeNote && !activeNote.trash) {\n            toggleTrashedNote(activeNote.id)\n        }\n    }\n\n    const syncNotesHandler = () => {\n        syncState(notes, categories)\n    }\n\n    const downloadNoteHandler = () => {\n        if (activeNote) {\n            downloadNote(getNoteTitle(activeNote.text), activeNote)\n        }\n    }\n\n    const toggleDarkThemeHandler = () => {\n        toggleDarkTheme()\n    }\n\n    useKey('alt+n', () => {\n        newNoteHandler()\n    })\n\n    useKey('alt+c', () => {\n        newTempCategoryHandler()\n    })\n\n    useKey('alt+w', () => {\n        trashNoteHandler()\n    })\n\n    useKey('alt+s', () => {\n        syncNotesHandler()\n    })\n\n    useKey('alt+d', () => {\n        downloadNoteHandler()\n    })\n\n    useKey('alt+t', () => {\n        toggleDarkThemeHandler()\n    })\n\n    return null\n}\n\nconst mapStateToProps = (state: ApplicationState) => ({\n    syncing: state.syncState.syncing,\n    notes: state.noteState.notes,\n    activeFolder: state.noteState.activeFolder,\n    categories: state.categoryState.categories,\n    activeNote: state.noteState.notes.find((note) => note.id === state.noteState.activeNoteId),\n    activeCategoryId: state.noteState.activeCategoryId,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    addNote: (note: NoteItem) => dispatch(addNote(note)),\n    swapNote: (noteId: string) => dispatch(swapNote(noteId)),\n    toggleTrashedNote: (noteId: string) => dispatch(toggleTrashedNote(noteId)),\n    syncState: (notes: NoteItem[], categories: CategoryItem[]) => dispatch(syncState(notes, categories)),\n    toggleDarkTheme: () => dispatch(toggleDarkTheme()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(KeyboardShortcuts)\n","import 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/base16-light.css'\nimport 'codemirror/theme/zenburn.css'\nimport 'codemirror/mode/gfm/gfm.js'\nimport 'codemirror/addon/selection/active-line.js'\nimport 'codemirror/keymap/vim'\n\nimport { ApplicationState, NoteItem } from 'types'\n\nimport { Controlled as CodeMirror } from 'react-codemirror2'\nimport { Dispatch } from 'redux'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport moment from 'moment'\nimport styled from 'styled-components'\nimport { updateNote } from 'actions'\n\nimport Colors from 'styles/colors'\n\ninterface NoteEditorProps {\n    loading: boolean\n    activeNote?: NoteItem\n    updateNote: (note: NoteItem) => void\n    codeMirrorOptions: { [key: string]: any }\n}\n\nconst NoteEditor: React.FC<NoteEditorProps> = ({ loading, activeNote, updateNote, codeMirrorOptions }) => {\n    if (loading) {\n        return <EmptyEditor>Загрузка...</EmptyEditor>\n    } else if (!activeNote) {\n        return <EmptyEditorCenter />\n    } else {\n        return (\n            <Editor\n                className=\"mousetrap\"\n                value={activeNote.text}\n                options={codeMirrorOptions}\n                editorDidMount={(editor) => {\n                    editor.focus()\n                    editor.setCursor(0)\n                }}\n                onBeforeChange={(editor, data, value) => {\n                    updateNote({\n                        id: activeNote.id,\n                        text: value,\n                        created: activeNote.created,\n                        lastUpdated: moment().format(),\n                    })\n                }}\n                onChange={(editor, data, value) => {\n                    if (activeNote && activeNote.text === '') {\n                        editor.focus()\n                    }\n                }}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = (state: ApplicationState) => ({\n    loading: state.noteState.loading,\n    activeNote: state.noteState.notes.find((note) => note.id === state.noteState.activeNoteId),\n    codeMirrorOptions: state.settingsState.codeMirrorOptions,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    updateNote: (note: NoteItem) => dispatch(updateNote(note)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteEditor)\n\nconst EmptyEditor = styled.div`\n    grid-area: editor;\n    background: ${Colors.A_COLOR_TEN(false)};\n`\n\nconst EmptyEditorCenter = styled(EmptyEditor)`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\n\nconst Editor = styled(CodeMirror)`\n    grid-area: editor;\n\n    .CodeMirror {\n        -webkit-font-smoothing: subpixel-antialiased;\n        height: 100%;\n        font-family: Menlo, Monaco, monospace;\n        font-weight: 500;\n        font-size: 15px;\n        line-height: 1.5;\n        padding-left: 1rem;\n    }\n\n    .CodeMirror-activeline-background {\n        background: rgba(0, 0, 0, 0.05) !important;\n    }\n`\n","import { ApplicationState, NoteItem } from 'types'\nimport { ArrowUp, Bookmark, Download, Trash, X } from 'react-feather'\nimport { downloadNote, getNoteTitle } from 'helpers'\nimport { toggleTrashedNote, toggleFavoriteNote, deleteNote } from 'actions'\n\nimport { Dispatch } from 'redux'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\n\ninterface NoteOptionsProps {\n    toggleTrashedNote: (noteId: string) => void\n    toggleFavoriteNote: (noteId: string) => void\n    deleteNote: (noteId: string) => void\n    clickedNote: NoteItem\n}\n\nconst NoteOptions: React.FC<NoteOptionsProps> = ({ toggleFavoriteNote, clickedNote, toggleTrashedNote, deleteNote }) => {\n    const trashNoteHandler = () => {\n        toggleTrashedNote(clickedNote.id)\n    }\n\n    const deleteNoteHandler = () => {\n        deleteNote(clickedNote.id)\n    }\n\n    const downloadNoteHandler = () => {\n        if (clickedNote) {\n            downloadNote(getNoteTitle(clickedNote.text), clickedNote)\n        }\n    }\n\n    const favoriteNoteHandler = () => {\n        toggleFavoriteNote(clickedNote.id)\n    }\n\n    return (\n        <NoteOptionsNav>\n            {clickedNote.trash ? (\n                <>\n                    <NavButton onClick={deleteNoteHandler}>\n                        <X size={15} />\n                        Удалить навсегда\n                    </NavButton>\n                    <NavButton onClick={trashNoteHandler}>\n                        <ArrowUp size={15} />\n                        Восстановить\n                    </NavButton>\n                </>\n            ) : (\n                <>\n                    <NavButton>\n                        <Trash size={15} />В корзину\n                    </NavButton>\n                    <NavButton onClick={favoriteNoteHandler}>\n                        <Bookmark size={15} />\n                        {clickedNote.favorite ? 'Удалить из Избранного' : 'Добавить в Избранное'}\n                    </NavButton>\n                </>\n            )}\n            <NavButton onClick={downloadNoteHandler}>\n                <Download size={15} />\n                Скачать\n            </NavButton>\n        </NoteOptionsNav>\n    )\n}\n\nconst mapStateToProps = (state: ApplicationState) => ({\n    activeCategoryId: state.noteState.activeCategoryId,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    deleteNote: (noteId: string) => dispatch(deleteNote(noteId)),\n    toggleTrashedNote: (noteId: string) => dispatch(toggleTrashedNote(noteId)),\n    toggleFavoriteNote: (noteId: string) => dispatch(toggleFavoriteNote(noteId)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteOptions)\n\nconst NoteOptionsNav = styled.nav`\n    margin-top: 1rem;\n\n    svg {\n        margin-right: 0.5rem;\n    }\n`\n\nconst NavButton = styled.div`\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    background: transparent;\n    font-weight: 600;\n    border: none;\n    font-size: 1rem;\n    padding: 0 0.5rem;\n\n    div {\n        cursor: pointer;\n        display: flex;\n        align-items: center;\n        padding: 0.5rem 0;\n    }\n\n    svg {\n        height: 18px;\n        width: 18px;\n        margin-right: 0.3rem;\n    }\n\n    &:hover {\n        background: rgba(0, 0, 0, 0.1);\n    }\n`\n","export const folderMap: { [key: string]: string } = {\n    ALL: 'Все заметки',\n    TRASH: 'Корзина',\n    FAVORITES: 'Избранные',\n}\n","import { ApplicationState, CategoryItem, NoteItem } from 'types'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { addCategoryToNote, addNote, pruneNotes, swapCategory, swapNote } from 'actions'\nimport { getNoteTitle, sortByLastUpdated } from 'helpers'\n\nimport Colors from 'styles/colors'\nimport { Dispatch } from 'redux'\nimport { Folders } from 'constants/enums'\nimport { MoreHorizontal } from 'react-feather'\nimport NoteOptions from 'containers/NoteOptions'\nimport { connect } from 'react-redux'\nimport { folderMap } from 'constants/index'\nimport styled from 'styled-components'\n\ninterface NoteListProps {\n    activeFolder: string\n    activeCategoryId: string\n    activeCategory?: CategoryItem\n    activeNoteId: string\n    filteredNotes: NoteItem[]\n    filteredCategories: CategoryItem[]\n    swapNote: (noteId: string) => void\n    swapCategory: (category: string) => void\n    pruneNotes: () => void\n    addCategoryToNote: (categoryId: string, noteId: string) => void\n    isDarkTheme: boolean\n}\n\nconst NoteList: React.FC<NoteListProps> = ({\n    activeFolder,\n    activeCategory,\n    activeCategoryId,\n    activeNoteId,\n    filteredNotes,\n    filteredCategories,\n    swapNote,\n    swapCategory,\n    pruneNotes,\n    addCategoryToNote,\n    isDarkTheme,\n}) => {\n    const [noteOptionsId, setNoteOptionsId] = useState('')\n    const node = useRef<HTMLDivElement>(null)\n\n    const handleNoteOptionsClick = (event: MouseEvent | React.MouseEvent<HTMLDivElement> | React.ChangeEvent<HTMLSelectElement>, noteId: string = '') => {\n        event.stopPropagation()\n\n        if (node.current) {\n            if (node.current.contains(event.target as HTMLDivElement)) return\n        }\n\n        if (!noteOptionsId) {\n            setNoteOptionsId(noteId)\n        } else if (noteOptionsId !== noteId) {\n            setNoteOptionsId(noteId)\n        } else {\n            setNoteOptionsId('')\n        }\n    }\n\n    useEffect(() => {\n        document.addEventListener('mousedown', handleNoteOptionsClick)\n\n        return () => {\n            document.removeEventListener('mousedown', handleNoteOptionsClick)\n        }\n    })\n\n    return (\n        <NoteSidebar darkTheme={isDarkTheme}>\n            <NoteSidebarHeader darkTheme={isDarkTheme}>{activeFolder === 'CATEGORY' ? activeCategory && activeCategory.name : folderMap[activeFolder]}</NoteSidebarHeader>\n            <NoteListContainer>\n                {filteredNotes.map((note) => {\n                    const noteTitle = getNoteTitle(note.text)\n\n                    return (\n                        <NoteEach\n                            key={note.id}\n                            active={note.id === activeNoteId}\n                            darkTheme={isDarkTheme}\n                            onClick={() => {\n                                if (note.id !== activeNoteId) {\n                                    swapNote(note.id)\n                                    pruneNotes()\n                                }\n                            }}\n                        >\n                            {noteTitle}\n                            <NoteOptionsDiv active={noteOptionsId === note.id} onClick={(event) => handleNoteOptionsClick(event, note.id)} darkTheme={isDarkTheme}>\n                                <MoreHorizontal size={15} />\n                            </NoteOptionsDiv>\n                            {noteOptionsId === note.id && (\n                                <NoteOptionsContext ref={node} onClick={(event) => event.stopPropagation()} darkTheme={isDarkTheme}>\n                                    {!note.trash && (\n                                        <>\n                                            <ContextActionTitle>Переместить в категорию</ContextActionTitle>\n\n                                            <SelectElement\n                                                defaultValue=\"\"\n                                                onChange={(event) => {\n                                                    addCategoryToNote(event.target.value, note.id)\n\n                                                    if (event.target.value !== activeCategoryId) {\n                                                        swapCategory(event.target.value)\n                                                        swapNote(note.id)\n                                                    }\n\n                                                    setNoteOptionsId('')\n                                                }}\n                                            >\n                                                <SelectElementOption disabled value=\"\">\n                                                    Выберите категорию\n                                                </SelectElementOption>\n\n                                                {filteredCategories\n                                                    .filter((category) => category.id !== note.category)\n                                                    .map((category) => (\n                                                        <SelectElementOption key={category.id} value={category.id}>\n                                                            {category.name}\n                                                        </SelectElementOption>\n                                                    ))}\n                                                {note.category && (\n                                                    <SelectElementOption key=\"none\" value=\"\">\n                                                        Удалить категорию записи\n                                                    </SelectElementOption>\n                                                )}\n                                            </SelectElement>\n                                        </>\n                                    )}\n                                    <NoteOptions clickedNote={note} />\n                                </NoteOptionsContext>\n                            )}\n                        </NoteEach>\n                    )\n                })}\n            </NoteListContainer>\n        </NoteSidebar>\n    )\n}\n\nconst mapStateToProps = (state: ApplicationState) => {\n    const { noteState, categoryState, themeState } = state\n    let filteredNotes: NoteItem[]\n\n    if (noteState.activeFolder === Folders.CATEGORY) {\n        filteredNotes = noteState.notes.filter((note) => !note.trash && note.category === noteState.activeCategoryId)\n    } else if (noteState.activeFolder === Folders.FAVORITES) {\n        filteredNotes = noteState.notes.filter((note) => !note.trash && note.favorite)\n    } else if (noteState.activeFolder === Folders.TRASH) {\n        filteredNotes = noteState.notes.filter((note) => note.trash)\n    } else {\n        filteredNotes = noteState.notes.filter((note) => !note.trash)\n    }\n\n    filteredNotes.sort(sortByLastUpdated)\n\n    return {\n        activeFolder: noteState.activeFolder,\n        activeCategoryId: noteState.activeCategoryId,\n        activeCategory: categoryState.categories.find((category) => category.id === noteState.activeCategoryId),\n        activeNoteId: noteState.activeNoteId,\n        notes: noteState.notes,\n        filteredNotes,\n        activeNote: state.noteState.notes.find((note) => note.id === state.noteState.activeNoteId),\n        filteredCategories: categoryState.categories.filter((category) => category.id !== noteState.activeCategoryId),\n        isDarkTheme: themeState.dark,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    addNote: (note: NoteItem) => dispatch(addNote(note)),\n    swapNote: (noteId: string) => dispatch(swapNote(noteId)),\n    swapCategory: (categoryId: string) => dispatch(swapCategory(categoryId)),\n    pruneNotes: () => dispatch(pruneNotes()),\n    addCategoryToNote: (categoryId: string, noteId: string) => dispatch(addCategoryToNote(categoryId, noteId)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteList)\n\nconst NoteSidebarHeader = styled.div<{ darkTheme?: boolean }>`\n    text-align: center;\n    padding: 0.5rem;\n    ${({ darkTheme }) => darkTheme && 'color: white'};\n    ${({ darkTheme }) => darkTheme && 'border-bottom: 1px solid ' + Colors.A_COLOR_EIGHT(true)};\n`\n\nconst NoteSidebar = styled.aside<{ darkTheme: boolean }>`\n    grid-area: note-sidebar;\n    background: ${({ darkTheme }) => Colors.A_COLOR_TWO(darkTheme)};\n    border-right: 1px solid ${({ darkTheme }) => Colors.A_COLOR_NINE(darkTheme)};\n`\n\nconst NoteListContainer = styled.div``\n\nconst NoteEach = styled.div<{ active: boolean; darkTheme: boolean }>`\n    position: relative;\n    cursor: pointer;\n    padding: 0.25rem 0.5rem;\n    border-bottom: 1px solid ${({ darkTheme }) => Colors.A_COLOR_EIGHT(darkTheme)};\n    background: ${({ active, darkTheme }) => active && Colors.A_COLOR_EIGHT(darkTheme)};\n    color: ${({ active, darkTheme }) => (active ? Colors.A_COLOR_FIVE(darkTheme) : Colors.A_COLOR_SIX(darkTheme))};\n    font-weight: ${({ active }) => active && 600};\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    &:hover {\n        background: ${({ darkTheme }) => Colors.A_COLOR_NINE(darkTheme)};\n        color: ${({ darkTheme }) => Colors.A_COLOR_FIVE(darkTheme)};\n    }\n`\n\nconst NoteOptionsDiv = styled.div<{ active: boolean; darkTheme: boolean }>`\n    color: ${({ darkTheme }) => Colors.A_COLOR_FOUR(darkTheme)};\n    padding: 0.5rem;\n    z-index: 1;\n    cursor: pointer;\n`\n\nconst NoteOptionsContext = styled.div<{ darkTheme: boolean }>`\n    cursor: default;\n    position: absolute;\n    color: ${({ darkTheme }) => Colors.A_COLOR_FOUR(darkTheme)};\n    top: 32px;\n    left: 200px;\n    min-width: 250px;\n    padding: 1rem;\n    background: white;\n    border: 1px solid ${({ darkTheme }) => Colors.A_COLOR_ELEVEN(darkTheme)};\n    z-index: 5;\n    box-shadow: 2px 3px 10px rgba(0, 0, 0, 0.1);\n`\n\nconst ContextActionTitle = styled.h2`\n    margin-top: 0;\n    font-size: 1rem;\n`\n\nconst SelectElement = styled.select`\n    -webkit-appearance: none;\n    font-size: 1rem;\n    padding: 0.5rem;\n    width: 100%;\n`\n\nconst SelectElementOption = styled.option``\n","import styled from 'styled-components'\nimport Colors from 'styles/colors'\n\nexport const Buttons = styled.a`\n    -webkit-appearance: none;\n    display: inline-block;\n    border: 2px solid ${Colors.PRIMARY};\n    background: ${Colors.PRIMARY};\n    border-radius: 4px;\n    color: white;\n    font-weight: 600;\n    font-size: 1rem;\n    padding: 0.75rem 1.25rem;\n    margin: 0 0 0.5rem 0;\n    vertical-align: middle;\n    text-align: center;\n    cursor: pointer;\n    text-decoration: none;\n    line-height: 1;\n\n    &:hover {\n        border: 2px solid ${Colors.PRIMARY};\n        border-radius: 4px;\n        background: ${Colors.PRIMARY};\n        text-decoration: none;\n    }\n\n    &:focus {\n        border: 2px solid ${Colors.PRIMARY};\n        border-radius: 4px;\n        background: ${Colors.PRIMARY};\n        text-decoration: none;\n    }\n\n    &:active {\n        border: 2px solid ${Colors.PRIMARY};\n        border-radius: 4px;\n        background: ${Colors.PRIMARY};\n        text-decoration: none;\n    }\n`\n\nexport const Icon = styled.div`\n    color: rgba(255, 255, 255, 0.7);\n`\n\nexport const Vcenter = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\n\nexport const Vbetween = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n`\n\nexport const Switch = styled.label`\n    position: relative;\n    display: inline-block;\n    width: 60px;\n    height: 34px;\n`\n\nexport const Slider = styled.span<{ round?: boolean }>`\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: ${Colors.A_COLOR_NINE()};\n    -webkit-transition: 0.4s;\n    transition: 0.4s;\n    ${({ round }) => round && 'border-radius: 34px;'};\n\n    &:before {\n        position: absolute;\n        content: '';\n        height: 26px;\n        width: 26px;\n        left: 4px;\n        bottom: 4px;\n        background-color: white;\n        -webkit-transition: 0.4s;\n        transition: 0.4s;\n        ${({ round }) => round && 'border-radius: 50%;'};\n    }\n`\n\nexport const SwitchInput = styled.input`\n    opacity: 0;\n    width: 0;\n    height: 0;\n\n    &:checked + ${Slider} {\n        background-color: ${Colors.PRIMARY};\n    }\n\n    &:focus + ${Slider} {\n        box-shadow: 0 0 1px ${Colors.PRIMARY};\n    }\n\n    &:checked + ${Slider}:before {\n        -webkit-transform: translateX(26px);\n        -ms-transform: translateX(26px);\n        transform: translateX(26px);\n    }\n`\n","import React, { useEffect, useRef } from 'react'\nimport { ApplicationState } from 'types'\nimport { Dispatch } from 'redux'\nimport { toggleDarkTheme, toggleSettingsModal, updateCodeMirrorOption } from 'actions'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { Buttons, Vbetween, Switch, SwitchInput, Slider } from 'styles/base'\nimport Colors from 'styles/colors'\n\nexport interface SettingsModalProps {\n    isOpen: boolean\n    dark: boolean\n    toggleSettingsModal: () => {}\n    toggleDarkTheme: () => void\n    updateCodeMirrorOption: (key: string, value: string) => void\n    codeMirrorOptions: { [key: string]: any }\n}\n\nconst SettingsModal: React.FC<SettingsModalProps> = ({ isOpen, dark, toggleDarkTheme, toggleSettingsModal, updateCodeMirrorOption, codeMirrorOptions }) => {\n    const node = useRef<HTMLDivElement>(null)\n\n    const handleDomClick = (event: MouseEvent | React.MouseEvent<HTMLDivElement> | React.ChangeEvent<HTMLSelectElement>) => {\n        event.stopPropagation()\n\n        if (node.current && node.current.contains(event.target as HTMLDivElement)) return\n\n        if (isOpen) {\n            toggleSettingsModal()\n        }\n    }\n\n    const toggleDarkThemeHandler = () => {\n        toggleDarkTheme()\n\n        if (!dark) {\n            updateCodeMirrorOption('theme', 'zenburn')\n        } else {\n            updateCodeMirrorOption('theme', 'base16-light')\n        }\n    }\n\n    useEffect(() => {\n        document.addEventListener('mousedown', handleDomClick)\n        return () => {\n            document.removeEventListener('mousedown', handleDomClick)\n        }\n    })\n\n    return isOpen ? (\n        <Dimmer>\n            <SettingsModalContainer ref={node}>\n                <H2>Настройки</H2>\n\n                <SettingsOptions>\n                    <SettingsLabel>Темный режим</SettingsLabel>\n                    <Switch>\n                        <SwitchInput type=\"checkbox\" checked={dark} onChange={toggleDarkThemeHandler} />\n                        <Slider round />\n                    </Switch>\n                </SettingsOptions>\n                <SettingsOptions>\n                    <SettingsLabel>Vim Mode</SettingsLabel>\n                    <Switch>\n                        <SwitchInput\n                            type=\"checkbox\"\n                            checked={codeMirrorOptions.keyMap === 'vim'}\n                            onChange={() => {\n                                if (codeMirrorOptions.keyMap === 'vim') {\n                                    updateCodeMirrorOption('keyMap', 'default')\n                                } else {\n                                    updateCodeMirrorOption('keyMap', 'vim')\n                                }\n                            }}\n                        />\n                        <Slider round />\n                    </Switch>\n                </SettingsOptions>\n            </SettingsModalContainer>\n        </Dimmer>\n    ) : null\n}\n\nconst mapStateToProps = (state: ApplicationState) => ({\n    isOpen: state.settingsState.isOpen,\n    dark: state.themeState.dark,\n    codeMirrorOptions: state.settingsState.codeMirrorOptions,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    toggleSettingsModal: () => dispatch(toggleSettingsModal()),\n    toggleDarkTheme: () => dispatch(toggleDarkTheme()),\n    updateCodeMirrorOption: (key: string, value: string) => dispatch(updateCodeMirrorOption(key, value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsModal)\n\nconst Dimmer = styled.div`\n    position: fixed;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    text-align: center;\n    background-color: rgba(0, 0, 0, 0.6);\n    line-height: 1;\n    user-select: none;\n    z-index: 99;\n`\n\nconst SettingsModalContainer = styled.div`\n    border-radius: 4px;\n    background: white;\n    padding: 1.5rem;\n    box-shadow: 2px 3px 10px rgba(0, 0, 0, 0.1);\n    text-align: left;\n    min-height: 300px;\n    width: 600px;\n    max-width: 90%;\n    user-select: text;\n    z-index: 100;\n`\n\nconst H2 = styled.h2`\n    margin-top: 0;\n    margin-bottom: 1.5rem;\n`\n\nconst SettingsOptions = styled(Vbetween)`\n    padding: 0.5rem 0;\n    border-bottom: 2px solid ${Colors.A_COLOR_ELEVEN()};\n\n    &:last-of-type {\n        border-bottom: 0;\n    }\n`\n\nconst SettingsLabel = styled.div`\n    font-weight: 600;\n    font-size: 1.1rem;\n`\n","import React, { useEffect } from 'react'\nimport { loadCategories, loadNotes } from 'actions'\n\nimport AppSidebar from 'containers/AppSidebar'\nimport { Dispatch } from 'redux'\nimport { KeyboardProvider } from 'contexts/KeyboardContext'\nimport KeyboardShortcuts from 'containers/KeyboardShortcuts'\nimport NoteEditor from 'containers/NoteEditor'\nimport NoteList from 'containers/NoteList'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { ApplicationState } from 'types'\nimport SettingsModal from 'containers/SettingsModal'\n\ninterface AppProps {\n    loadNotes: () => void\n    loadCategories: () => void\n    dark?: boolean\n}\n\nconst App: React.FC<AppProps> = ({ loadNotes, loadCategories, dark }) => {\n    let theme = ''\n\n    if (dark) {\n        theme = 'dark'\n    }\n\n    useEffect(() => {\n        loadNotes()\n    }, [loadNotes])\n\n    useEffect(() => {\n        loadCategories()\n    }, [loadCategories])\n\n    return (\n        <AppContainer theme={theme}>\n            <KeyboardProvider>\n                <AppSidebar />\n                <NoteList />\n                <NoteEditor />\n                <KeyboardShortcuts />\n                <SettingsModal />\n            </KeyboardProvider>\n        </AppContainer>\n    )\n}\n\nconst mapStateToProps = (state: ApplicationState) => ({\n    dark: state.themeState.dark,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    loadNotes: () => dispatch(loadNotes()),\n    loadCategories: () => dispatch(loadCategories()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n\nconst AppContainer = styled.div`\n    display: grid;\n    grid-template-areas: 'app-sidebar note-sidebar editor editor';\n    grid-template-columns: 175px 300px auto;\n    height: 100vh;\n`\n","import { CategoryActionTypes, CategoryState } from 'types'\n\nimport { Actions } from 'constants/enums'\n\nconst initialState: CategoryState = {\n    categories: [],\n    error: '',\n    loading: true,\n}\n\nconst categoryReducer = (state = initialState, action: CategoryActionTypes): CategoryState => {\n    switch (action.type) {\n        case Actions.LOAD_CATEGORIES:\n            return initialState\n        case Actions.LOAD_CATEGORIES_SUCCESS:\n            return {\n                ...state,\n                categories: action.payload,\n                loading: false,\n            }\n        case Actions.LOAD_CATEGORIES_ERROR:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload,\n            }\n        case Actions.ADD_CATEGORY:\n            return {\n                ...state,\n                categories: [...state.categories, action.payload],\n            }\n        case Actions.UPDATE_CATEGORY:\n            return {\n                ...state,\n                categories: state.categories.map((category) => {\n                    return category.id === action.payload.id ? { id: category.id, name: action.payload.name } : category\n                }),\n            }\n        case Actions.DELETE_CATEGORY:\n            return {\n                ...state,\n                categories: state.categories.filter((category) => category.id !== action.payload),\n            }\n        default:\n            return state\n    }\n}\n\nexport default categoryReducer\n","import { Actions, Folders } from 'constants/enums'\nimport { NoteItem, NoteState, NotesActionTypes } from 'types'\n\nimport { sortByLastUpdated } from 'helpers'\n\nconst initialState: NoteState = {\n    notes: [],\n    activeNoteId: '',\n    activeFolder: 'ALL',\n    activeCategoryId: '',\n    error: '',\n    loading: true,\n}\n\nconst noteReducer = (state = initialState, action: NotesActionTypes): NoteState => {\n    switch (action.type) {\n        case Actions.LOAD_NOTES:\n            return initialState\n        case Actions.LOAD_NOTES_SUCCESS:\n            return {\n                ...state,\n                notes: action.payload,\n                activeNoteId: getFirstNote(Folders.ALL, action.payload),\n                loading: false,\n            }\n        case Actions.LOAD_NOTES_ERROR:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload,\n            }\n        case Actions.SWAP_NOTE:\n            return {\n                ...state,\n                activeNoteId: action.payload,\n            }\n        case Actions.SWAP_CATEGORY:\n            return {\n                ...state,\n                activeCategoryId: action.payload,\n                activeFolder: Folders.CATEGORY,\n                activeNoteId: getFirstNote(Folders.CATEGORY, state.notes, action.payload),\n            }\n        case Actions.SWAP_FOLDER:\n            return {\n                ...state,\n                activeFolder: action.payload,\n                activeCategoryId: '',\n                activeNoteId: getFirstNote(action.payload, state.notes),\n            }\n        case Actions.PRUNE_NOTES:\n            return {\n                ...state,\n                notes: state.notes.filter((note) => note.text !== '' || note.id === state.activeNoteId),\n            }\n        case Actions.ADD_NOTE:\n            return {\n                ...state,\n                notes: [...state.notes, action.payload],\n            }\n        case Actions.UPDATE_NOTE:\n            return {\n                ...state,\n                notes: state.notes.map((note) => {\n                    if (note.id === action.payload.id) {\n                        return {\n                            ...note,\n                            text: action.payload.text,\n                            lastUpdated: action.payload.lastUpdated,\n                        }\n                    } else {\n                        return note\n                    }\n                }),\n            }\n        case Actions.TOGGLE_FAVORITE_NOTE:\n            return {\n                ...state,\n                notes: state.notes.map((note) => {\n                    if (note.id === action.payload) {\n                        return {\n                            ...note,\n                            favorite: !note.favorite,\n                        }\n                    } else {\n                        return note\n                    }\n                }),\n            }\n        case Actions.TOGGLE_TRASHED_NOTE:\n            return {\n                ...state,\n                notes: state.notes.map((note) => {\n                    if (note.id === action.payload) {\n                        return {\n                            ...note,\n                            trash: !note.trash,\n                        }\n                    } else {\n                        return note\n                    }\n                }),\n                activeNoteId: getNewNoteId(state.notes, action.payload, state.activeCategoryId),\n            }\n        case Actions.DELETE_NOTE:\n            return {\n                ...state,\n                notes: state.notes.filter((note) => note.id !== action.payload),\n                activeNoteId: getNewNoteId(state.notes, action.payload, state.activeCategoryId),\n            }\n        case Actions.PRUNE_CATEGORY_FROM_NOTES:\n            return {\n                ...state,\n                notes: state.notes.map((note) => {\n                    if (note.category === action.payload) {\n                        return {\n                            ...note,\n                            category: undefined,\n                        }\n                    } else {\n                        return note\n                    }\n                }),\n            }\n        case Actions.ADD_CATEGORY_TO_NOTE:\n            return {\n                ...state,\n                notes: state.notes.map((note) => {\n                    if (note.id === action.payload.noteId) {\n                        return {\n                            ...note,\n                            category: action.payload.categoryId,\n                        }\n                    } else {\n                        return note\n                    }\n                }),\n            }\n        default:\n            return state\n    }\n}\n\nexport default noteReducer\n\nexport function getFirstNote(folder: string, notes: NoteItem[], categoryId?: string): string {\n    const notesNotTrash = notes.filter((note) => !note.trash).sort(sortByLastUpdated)\n    const firstNoteCategory = notesNotTrash.find((note) => note.category === categoryId)\n    const firstNoteFavorite = notesNotTrash.find((note) => note.favorite)\n    const firstNoteTrash = notes.find((note) => note.trash)\n\n    switch (folder) {\n        case Folders.CATEGORY:\n            return firstNoteCategory ? firstNoteCategory.id : ''\n        case Folders.FAVORITES:\n            return firstNoteFavorite ? firstNoteFavorite.id : ''\n        case Folders.TRASH:\n            return firstNoteTrash ? firstNoteTrash.id : ''\n        case Folders.ALL:\n            return notesNotTrash.length > 0 ? notesNotTrash[0].id : ''\n        default:\n            return ''\n    }\n}\n\nexport function getNewNoteId(notes: NoteItem[], oldNoteId: string, activeCategoryId: string): string {\n    const notesNotTrash = activeCategoryId ? notes.filter((note) => !note.trash && note.category === activeCategoryId) : notes.filter((note) => !note.trash)\n    const deletedNoteIndex = notesNotTrash.findIndex((note) => note.id === oldNoteId)\n    let newActiveNoteId = ''\n\n    if (deletedNoteIndex === 0 && notesNotTrash[1]) {\n        newActiveNoteId = notesNotTrash[deletedNoteIndex + 1].id\n    } else if (notesNotTrash[deletedNoteIndex - 1]) {\n        newActiveNoteId = notesNotTrash[deletedNoteIndex - 1].id\n    }\n\n    return newActiveNoteId\n}\n","import { SyncState, SyncStateActionTypes } from 'types'\n\nimport { Actions } from 'constants/enums'\n\nconst initialState = {\n    syncing: false,\n    error: '',\n}\n\nconst syncReducer = (state = initialState, action: SyncStateActionTypes): SyncState => {\n    switch (action.type) {\n        case Actions.SYNC_STATE:\n            return {\n                ...state,\n                syncing: true,\n            }\n        case Actions.SYNC_STATE_SUCCESS:\n            return {\n                ...state,\n                syncing: false,\n            }\n        case Actions.SYNC_STATE_ERROR:\n            return {\n                ...state,\n                syncing: false,\n                error: action.payload,\n            }\n        default:\n            return state\n    }\n}\n\nexport default syncReducer\n","import { Actions } from 'constants/enums'\nimport { ThemeActionTypes, ThemeState } from 'types'\n\nconst initialState: ThemeState = {\n    dark: false,\n}\n\nconst themeReducer = (state = initialState, action: ThemeActionTypes): ThemeState => {\n    switch (action.type) {\n        case Actions.TOGGLE_DARK_THEME:\n            return {\n                ...state,\n                dark: !state.dark,\n            }\n        default:\n            return state\n    }\n}\n\nexport default themeReducer\n","import { Actions } from 'constants/enums'\nimport { SettingsActionTypes, SettingsState } from 'types'\n\nconst initialState: SettingsState = {\n    isOpen: false,\n    codeMirrorOptions: {\n        mode: 'gfm',\n        theme: 'base16-light',\n        lineNumbers: false,\n        lineWrapping: true,\n        styleActiveLine: {\n            nonEmpty: true,\n        },\n        viewportMargin: Infinity,\n        keyMap: 'default',\n    },\n}\n\nconst settingsReducer = (state = initialState, action: SettingsActionTypes): SettingsState => {\n    switch (action.type) {\n        case Actions.TOGGLE_SETTINGS_MODAL:\n            return {\n                ...state,\n                isOpen: !state.isOpen,\n            }\n        case Actions.UPDATE_CODE_MIRROR_OPTION:\n            return {\n                ...state,\n                codeMirrorOptions: {\n                    ...state.codeMirrorOptions,\n                    [action.payload.key]: action.payload.value,\n                },\n            }\n        default:\n            return state\n    }\n}\n\nexport default settingsReducer\n","import { Reducer, combineReducers } from 'redux'\n\nimport { ApplicationState } from 'types'\nimport categoryReducer from 'reducers/categoryReducer'\nimport noteReducer from 'reducers/noteReducer'\nimport syncReducer from 'reducers/syncReducer'\nimport themeReducer from 'reducers/themeReducer'\nimport settingsReducer from 'reducers/settingsReducer'\n\nconst rootReducer: Reducer<ApplicationState> = combineReducers<ApplicationState>({\n    noteState: noteReducer,\n    categoryState: categoryReducer,\n    syncState: syncReducer,\n    themeState: themeReducer,\n    settingsState: settingsReducer,\n})\n\nexport type AppState = ReturnType<typeof rootReducer>\n\nexport default rootReducer\n","import { CategoryItem, NoteItem } from 'types'\n\nexport const requestNotes = () => {\n    return new Promise((resolve, reject) => {\n        const data = localStorage.getItem('notes') || '[]'\n\n        if (data) {\n            resolve(JSON.parse(data))\n        } else {\n            reject({\n                message: 'Что-то пошло не так',\n            })\n        }\n    })\n}\n\nexport const requestCategories = () => {\n    return new Promise((resolve, reject) => {\n        const data = localStorage.getItem('categories') || '[]'\n\n        if (data) {\n            resolve(JSON.parse(data))\n        } else {\n            reject({\n                message: 'Что-то пошло не так',\n            })\n        }\n    })\n}\n\nexport const saveState = (notes: NoteItem[], categories: CategoryItem[]) => {\n    return new Promise((resolve, reject) => {\n        localStorage.setItem('notes', JSON.stringify(notes))\n        localStorage.setItem('categories', JSON.stringify(categories))\n\n        if (false) {\n            reject({ message: 'Sync failed' })\n        }\n\n        resolve({\n            notes: JSON.parse(localStorage.getItem('notes') || '[]'),\n            categories: JSON.parse(localStorage.getItem('notes') || '[]'),\n        })\n    })\n}\n","import { all, put, takeLatest } from 'redux-saga/effects'\nimport { loadCategoriesError, loadCategoriesSuccess, loadNotesError, loadNotesSuccess, syncStateError, syncStateSuccess } from 'actions'\nimport { requestCategories, requestNotes, saveState } from 'api'\n\nimport { Actions } from 'constants/enums'\nimport { SyncStateAction } from 'types/index'\n\nfunction* fetchNotes() {\n    try {\n        const notes = yield requestNotes()\n        yield put(loadNotesSuccess(notes))\n    } catch (error) {\n        yield put(loadNotesError(error))\n    }\n}\n\nfunction* fetchCategories() {\n    try {\n        const categories = yield requestCategories()\n        yield put(loadCategoriesSuccess(categories))\n    } catch (error) {\n        yield put(loadCategoriesError(error))\n    }\n}\n\nfunction* postState({ payload: { notes, categories } }: SyncStateAction) {\n    try {\n        yield saveState(notes, categories)\n\n        yield put(syncStateSuccess())\n    } catch (error) {\n        yield put(syncStateError(error))\n    }\n}\n\nexport function* allSaga() {\n    yield all([takeLatest(Actions.LOAD_NOTES, fetchNotes), takeLatest(Actions.LOAD_CATEGORIES, fetchCategories), takeLatest(Actions.SYNC_STATE, postState)])\n}\n\nexport default allSaga\n","import { applyMiddleware, compose, createStore } from 'redux'\n\nimport App from 'containers/App'\nimport { Provider } from 'react-redux'\nimport React from 'react'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport createSagaMiddleware from 'redux-saga'\nimport { render } from 'react-dom'\nimport rootReducer from 'reducers'\nimport rootSaga from 'sagas'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(sagaMiddleware)))\n\nsagaMiddleware.run(rootSaga)\n\nrender(\n    <Router>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </Router>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}