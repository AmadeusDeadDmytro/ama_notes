[{"D:\\Web\\Pet\\ama_notes\\src\\actions\\index.ts":"1","D:\\Web\\Pet\\ama_notes\\src\\reducers\\categoryReducer.ts":"2","D:\\Web\\Pet\\ama_notes\\src\\containers\\Navigation.tsx":"3","D:\\Web\\Pet\\ama_notes\\src\\containers\\NoteEditor.tsx":"4","D:\\Web\\Pet\\ama_notes\\src\\reducers\\syncReducer.ts":"5","D:\\Web\\Pet\\ama_notes\\src\\containers\\NoteList.tsx":"6","D:\\Web\\Pet\\ama_notes\\src\\reducers\\noteReducer.ts":"7","D:\\Web\\Pet\\ama_notes\\src\\containers\\AppSidebar.tsx":"8","D:\\Web\\Pet\\ama_notes\\src\\styles\\colors.ts":"9","D:\\Web\\Pet\\ama_notes\\src\\componets\\App.tsx":"10","D:\\Web\\Pet\\ama_notes\\src\\constants\\enums.ts":"11","D:\\Web\\Pet\\ama_notes\\src\\helpers\\index.ts":"12","D:\\Web\\Pet\\ama_notes\\src\\index.tsx":"13","E:\\Web\\Pet\\ama_notes\\src\\index.tsx":"14","E:\\Web\\Pet\\ama_notes\\src\\componets\\App.tsx":"15","E:\\Web\\Pet\\ama_notes\\src\\reducers\\index.ts":"16","E:\\Web\\Pet\\ama_notes\\src\\sagas\\index.ts":"17","E:\\Web\\Pet\\ama_notes\\src\\containers\\AppSidebar.tsx":"18","E:\\Web\\Pet\\ama_notes\\src\\containers\\NoteList.tsx":"19","E:\\Web\\Pet\\ama_notes\\src\\containers\\NoteEditor.tsx":"20","E:\\Web\\Pet\\ama_notes\\src\\containers\\Navigation.tsx":"21","E:\\Web\\Pet\\ama_notes\\src\\reducers\\categoryReducer.ts":"22","E:\\Web\\Pet\\ama_notes\\src\\reducers\\noteReducer.ts":"23","E:\\Web\\Pet\\ama_notes\\src\\reducers\\syncReducer.ts":"24","E:\\Web\\Pet\\ama_notes\\src\\constants\\enums.ts":"25","E:\\Web\\Pet\\ama_notes\\src\\actions\\index.ts":"26","E:\\Web\\Pet\\ama_notes\\src\\api\\index.ts":"27","E:\\Web\\Pet\\ama_notes\\src\\constants\\codeMirrorOptions.ts":"28","E:\\Web\\Pet\\ama_notes\\src\\styles\\colors.ts":"29","E:\\Web\\Pet\\ama_notes\\src\\helpers\\index.ts":"30"},{"size":3180,"mtime":1609785928423,"results":"31","hashOfConfig":"32"},{"size":1497,"mtime":1609694531928,"results":"33","hashOfConfig":"32"},{"size":3230,"mtime":1609787249723,"results":"34","hashOfConfig":"32"},{"size":2737,"mtime":1609856010314,"results":"35","hashOfConfig":"32"},{"size":818,"mtime":1609622652667,"results":"36","hashOfConfig":"32"},{"size":8252,"mtime":1609856062059,"results":"37","hashOfConfig":"32"},{"size":5651,"mtime":1609787691005,"results":"38","hashOfConfig":"32"},{"size":8235,"mtime":1609787205725,"results":"39","hashOfConfig":"32"},{"size":473,"mtime":1609783732431,"results":"40","hashOfConfig":"32"},{"size":1338,"mtime":1609856297958,"results":"41","hashOfConfig":"32"},{"size":1048,"mtime":1609786308827,"results":"42","hashOfConfig":"32"},{"size":1238,"mtime":1609856246554,"results":"43","hashOfConfig":"32"},{"size":767,"mtime":1609362001538,"results":"44","hashOfConfig":"32"},{"size":767,"mtime":1609362001538,"results":"45","hashOfConfig":"46"},{"size":1338,"mtime":1610024594048,"results":"47","hashOfConfig":"46"},{"size":502,"mtime":1609361809731,"results":"48","hashOfConfig":"46"},{"size":1223,"mtime":1609362448208,"results":"49","hashOfConfig":"46"},{"size":8689,"mtime":1610024265657,"results":"50","hashOfConfig":"46"},{"size":8288,"mtime":1610024184526,"results":"51","hashOfConfig":"46"},{"size":2737,"mtime":1609856010314,"results":"52","hashOfConfig":"46"},{"size":3560,"mtime":1610024530716,"results":"53","hashOfConfig":"46"},{"size":1498,"mtime":1609785928906,"results":"54","hashOfConfig":"46"},{"size":5651,"mtime":1609787691005,"results":"55","hashOfConfig":"46"},{"size":818,"mtime":1609622652667,"results":"56","hashOfConfig":"46"},{"size":1048,"mtime":1609786308827,"results":"57","hashOfConfig":"46"},{"size":3180,"mtime":1609785928423,"results":"58","hashOfConfig":"46"},{"size":1249,"mtime":1609362447771,"results":"59","hashOfConfig":"46"},{"size":189,"mtime":1610023833855,"results":"60","hashOfConfig":"46"},{"size":473,"mtime":1609783732431,"results":"61","hashOfConfig":"46"},{"size":1238,"mtime":1609856246554,"results":"62","hashOfConfig":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1j5cugq",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},"19u8yaq",{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"95"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Web\\Pet\\ama_notes\\src\\actions\\index.ts",[],"D:\\Web\\Pet\\ama_notes\\src\\reducers\\categoryReducer.ts",[],"D:\\Web\\Pet\\ama_notes\\src\\containers\\Navigation.tsx",["130"],"import { ApplicationState, CategoryItem, NoteItem } from 'types'\nimport { addNote, deleteNote, sendNoteToTrash, swapNote, syncState } from 'actions'\nimport { downloadNote, getNoteTitle } from 'helpers'\n\nimport Colors from 'styles/colors'\nimport { Dispatch } from 'redux'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport moment from 'moment'\nimport styled from 'styled-components'\nimport { v4 as uuid } from 'uuid'\n\ninterface NavigationProps {\n    addNote: (note: NoteItem) => void\n    swapNote: (noteId: string) => void\n    sendNoteToTrash: (noteId: string) => void\n    syncState: (notes: NoteItem[], categories: CategoryItem[]) => void\n    activeNote?: NoteItem\n    notes: NoteItem[]\n    categories: CategoryItem[]\n    syncing: boolean\n}\n\nconst Navigation: React.FC<NavigationProps> = ({ addNote, activeNote, sendNoteToTrash, swapNote, syncState, notes, syncing, categories }) => {\n    const newNoteHandler = () => {\n        const note: NoteItem = {\n            id: uuid(),\n            text: '',\n            created: moment().format(),\n            lastUpdated: moment().format(),\n        }\n\n        if ((activeNote && activeNote.text !== '') || !activeNote) {\n            addNote(note)\n            swapNote(note.id)\n        }\n    }\n\n    const trashNoteHandler = () => {\n        if (activeNote && !activeNote.trash) {\n            sendNoteToTrash(activeNote.id)\n        }\n    }\n\n    const syncNoteHandler = () => {\n        syncState(notes, categories)\n    }\n\n    const downloadHandler = () => {\n        if (activeNote) {\n            downloadNote(getNoteTitle(activeNote.text), activeNote)\n        }\n    }\n\n    return (\n        <NavigationContainer>\n            <NavButton onClick={newNoteHandler}>+ Новая запись</NavButton>\n            <NavButton onClick={trashNoteHandler}>x Удалить запись</NavButton>\n            <NavButton onClick={downloadHandler}>^ Скачать запись</NavButton>\n            <NavButton onClick={syncNoteHandler}>\n                Синхронизировать записи\n                {syncing && 'Синхронизация...'}\n            </NavButton>\n        </NavigationContainer>\n    )\n}\n\nconst mapStateToProps = (state: ApplicationState) => ({\n    syncing: state.syncState.syncing,\n    notes: state.noteState.notes,\n    categories: state.categoryState.categories,\n    activeNote: state.noteState.notes.find((note) => note.id === state.noteState.activeNoteId),\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    addNote: (note: NoteItem) => dispatch(addNote(note)),\n    swapNote: (noteId: string) => dispatch(swapNote(noteId)),\n    sendNoteToTrash: (noteId: string) => dispatch(sendNoteToTrash(noteId)),\n    syncState: (notes: NoteItem[], categories: CategoryItem[]) => dispatch(syncState(notes, categories)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation)\n\nconst NavButton = styled.button`\n    display: block;\n    cursor: pointer;\n    background: transparent;\n    font-weight: 600;\n    border: none;\n    font-size: 1rem;\n\n    &:hover {\n        background: ${Colors.HOVER};\n    }\n`\n\nconst NavigationContainer = styled.div`\n    grid-area: nav;\n    background: ${Colors.BACKGROUND};\n    display: flex;\n`\n",["131","132"],"D:\\Web\\Pet\\ama_notes\\src\\containers\\NoteEditor.tsx",["133"],"import 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/base16-light.css'\nimport 'codemirror/mode/gfm/gfm.js'\nimport 'codemirror/addon/selection/active-line.js'\n\nimport { ApplicationState, NoteItem } from 'types'\n\nimport { Controlled as CodeMirror } from 'react-codemirror2'\nimport Colors from 'styles/colors'\nimport { Dispatch } from 'redux'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport moment from 'moment'\nimport options from 'constants/codeMirrorOptions'\nimport styled from 'styled-components'\nimport { updateNote } from 'actions'\n\ninterface NoteEditorProps {\n    loading: boolean\n    activeNote?: NoteItem\n    updateNote: (note: NoteItem) => void\n}\n\nconst NoteEditor: React.FC<NoteEditorProps> = ({ loading, activeNote, updateNote }) => {\n    if (loading) {\n        return <EmptyEditor>Загрузка...</EmptyEditor>\n    } else if (!activeNote) {\n        return <EmptyEditorCenter />\n    } else {\n        return (\n            <Editor\n                className=\"mousetrap\"\n                value={activeNote.text}\n                options={options}\n                editorDidMount={(editor) => {\n                    editor.focus()\n                }}\n                onBeforeChange={(editor, data, value) => {\n                    updateNote({\n                        id: activeNote.id,\n                        text: value,\n                        created: activeNote.created,\n                        lastUpdated: moment().format(),\n                    })\n                }}\n                onChange={(editor, data, value) => {\n                    editor.focus()\n                }}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = (state: ApplicationState) => ({\n    loading: state.noteState.loading,\n    activeNote: state.noteState.notes.find((note) => note.id === state.noteState.activeNoteId),\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    updateNote: (note: NoteItem) => dispatch(updateNote(note)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteEditor)\n\nconst EmptyEditor = styled.div`\n    grid-area: editor;\n    max-height: calc(100vh - 25px);\n    overflow-y: auto;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\n\nconst EmptyEditorCenter = styled(EmptyEditor)`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\n\nconst Editor = styled(CodeMirror)`\n    grid-area: editor;\n\n    .CodeMirror {\n        -webkit-font-smoothing: subpixel-antialiased;\n        height: 100%;\n        font-family: Menlo, Monaco, monospace;\n        font-weight: 500;\n        font-size: 15px;\n        line-height: 1.5;\n    }\n\n    .CodeMirror-activeline-background {\n        background: rgba(0, 0, 0, 0.05) !important;\n    }\n`\n","D:\\Web\\Pet\\ama_notes\\src\\reducers\\syncReducer.ts",["134"],"D:\\Web\\Pet\\ama_notes\\src\\containers\\NoteList.tsx",["135","136"],"D:\\Web\\Pet\\ama_notes\\src\\reducers\\noteReducer.ts",["137","138"],"D:\\Web\\Pet\\ama_notes\\src\\containers\\AppSidebar.tsx",["139","140","141","142"],"D:\\Web\\Pet\\ama_notes\\src\\styles\\colors.ts",[],"D:\\Web\\Pet\\ama_notes\\src\\componets\\App.tsx",["143"],"D:\\Web\\Pet\\ama_notes\\src\\constants\\enums.ts",[],"D:\\Web\\Pet\\ama_notes\\src\\helpers\\index.ts",[],"D:\\Web\\Pet\\ama_notes\\src\\index.tsx",[],["144","145"],"E:\\Web\\Pet\\ama_notes\\src\\index.tsx",[],["146","147"],"E:\\Web\\Pet\\ama_notes\\src\\componets\\App.tsx",["148"],"E:\\Web\\Pet\\ama_notes\\src\\reducers\\index.ts",[],"E:\\Web\\Pet\\ama_notes\\src\\sagas\\index.ts",["149"],"import { all, put, take, takeLatest } from 'redux-saga/effects'\nimport { loadCategoriesError, loadCategoriesSuccess, loadNotesError, loadNotesSuccess, syncStateError, syncStateSuccess } from 'actions'\nimport { requestCategories, requestNotes, saveState } from 'api'\n\nimport { Actions } from 'constants/enums'\nimport { SyncStateAction } from 'types/index'\n\nfunction* fetchNotes() {\n    try {\n        const notes = yield requestNotes()\n        yield put(loadNotesSuccess(notes))\n    } catch (error) {\n        yield put(loadNotesError(error))\n    }\n}\n\nfunction* fetchCategories() {\n    try {\n        const categories = yield requestCategories()\n        yield put(loadCategoriesSuccess(categories))\n    } catch (error) {\n        yield put(loadCategoriesError(error))\n    }\n}\n\nfunction* postState({ payload: { notes, categories } }: SyncStateAction) {\n    try {\n        yield saveState(notes, categories)\n\n        yield put(syncStateSuccess())\n    } catch (error) {\n        yield put(syncStateError(error))\n    }\n}\n\nexport function* allSaga() {\n    yield all([takeLatest(Actions.LOAD_NOTES, fetchNotes), takeLatest(Actions.LOAD_CATEGORIES, fetchCategories), takeLatest(Actions.SYNC_STATE, postState)])\n}\n\nexport default allSaga\n","E:\\Web\\Pet\\ama_notes\\src\\containers\\AppSidebar.tsx",["150","151","152","153"],"E:\\Web\\Pet\\ama_notes\\src\\containers\\NoteList.tsx",["154","155"],"E:\\Web\\Pet\\ama_notes\\src\\containers\\NoteEditor.tsx",["156"],"E:\\Web\\Pet\\ama_notes\\src\\containers\\Navigation.tsx",["157"],"import { ApplicationState, CategoryItem, NoteItem } from 'types'\nimport { Cloud, Download, Plus, X } from 'react-feather'\nimport { addNote, deleteNote, sendNoteToTrash, swapNote, syncState } from 'actions'\nimport { downloadNote, getNoteTitle } from 'helpers'\n\nimport Colors from 'styles/colors'\nimport { Dispatch } from 'redux'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport moment from 'moment'\nimport styled from 'styled-components'\nimport { v4 as uuid } from 'uuid'\n\ninterface NavigationProps {\n    addNote: (note: NoteItem) => void\n    swapNote: (noteId: string) => void\n    sendNoteToTrash: (noteId: string) => void\n    syncState: (notes: NoteItem[], categories: CategoryItem[]) => void\n    activeNote?: NoteItem\n    activeCategoryId: string\n    notes: NoteItem[]\n    categories: CategoryItem[]\n    syncing: boolean\n}\n\nconst Navigation: React.FC<NavigationProps> = ({ addNote, activeNote, activeCategoryId, sendNoteToTrash, swapNote, syncState, notes, syncing, categories }) => {\n    const newNoteHandler = () => {\n        const note: NoteItem = {\n            id: uuid(),\n            text: '',\n            created: moment().format(),\n            lastUpdated: moment().format(),\n            category: activeCategoryId ? activeCategoryId : undefined\n        }\n\n        if ((activeNote && activeNote.text !== '') || !activeNote) {\n            addNote(note)\n            swapNote(note.id)\n        }\n    }\n\n    const trashNoteHandler = () => {\n        if (activeNote && !activeNote.trash) {\n            sendNoteToTrash(activeNote.id)\n        }\n    }\n\n    const syncNoteHandler = () => {\n        syncState(notes, categories)\n    }\n\n    const downloadHandler = () => {\n        if (activeNote) {\n            downloadNote(getNoteTitle(activeNote.text), activeNote)\n        }\n    }\n\n    return (\n        <NavigationContainer>\n            <NavButton onClick={newNoteHandler}><Plus /> Новая запись</NavButton>\n            <NavButton onClick={trashNoteHandler}><X /> Удалить запись</NavButton>\n            <NavButton onClick={downloadHandler}><Download /> Скачать запись</NavButton>\n            <NavButton onClick={syncNoteHandler}>\n                <Cloud />\n                Синхронизировать записи\n            </NavButton>\n        </NavigationContainer>\n    )\n}\n\nconst mapStateToProps = (state: ApplicationState) => ({\n    syncing: state.syncState.syncing,\n    notes: state.noteState.notes,\n    categories: state.categoryState.categories,\n    activeNote: state.noteState.notes.find((note) => note.id === state.noteState.activeNoteId),\n    activeCategoryId: state.noteState.activeCategoryId\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    addNote: (note: NoteItem) => dispatch(addNote(note)),\n    swapNote: (noteId: string) => dispatch(swapNote(noteId)),\n    sendNoteToTrash: (noteId: string) => dispatch(sendNoteToTrash(noteId)),\n    syncState: (notes: NoteItem[], categories: CategoryItem[]) => dispatch(syncState(notes, categories)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation)\n\nconst NavButton = styled.button`\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    background: transparent;\n    font-weight: 600;\n    border: none;\n    font-size: 1rem;\n\n    &:hover {\n        background: ${Colors.HOVER};\n    }\n\n    svg {\n        height: 18px;\n        width: 18px;\n        margin-right: 0.3rem;\n    }\n`\n\nconst NavigationContainer = styled.div`\n    grid-area: nav;\n    background: ${Colors.BACKGROUND};\n    display: flex;\n`\n","E:\\Web\\Pet\\ama_notes\\src\\reducers\\categoryReducer.ts",[],"E:\\Web\\Pet\\ama_notes\\src\\reducers\\noteReducer.ts",["158","159"],"E:\\Web\\Pet\\ama_notes\\src\\reducers\\syncReducer.ts",["160"],"E:\\Web\\Pet\\ama_notes\\src\\constants\\enums.ts",[],"E:\\Web\\Pet\\ama_notes\\src\\actions\\index.ts",[],"E:\\Web\\Pet\\ama_notes\\src\\api\\index.ts",[],"E:\\Web\\Pet\\ama_notes\\src\\constants\\codeMirrorOptions.ts",[],"E:\\Web\\Pet\\ama_notes\\src\\styles\\colors.ts",[],"E:\\Web\\Pet\\ama_notes\\src\\helpers\\index.ts",[],{"ruleId":"161","severity":1,"message":"162","line":2,"column":19,"nodeType":"163","messageId":"164","endLine":2,"endColumn":29},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"161","severity":1,"message":"169","line":9,"column":8,"nodeType":"163","messageId":"164","endLine":9,"endColumn":14},{"ruleId":"170","severity":1,"message":"171","line":29,"column":13,"nodeType":"172","messageId":"173","endLine":29,"endColumn":25},{"ruleId":"161","severity":1,"message":"174","line":45,"column":15,"nodeType":"163","messageId":"164","endLine":45,"endColumn":30},{"ruleId":"175","severity":1,"message":"176","line":54,"column":8,"nodeType":"177","endLine":54,"endColumn":10,"suggestions":"178"},{"ruleId":"161","severity":1,"message":"179","line":4,"column":10,"nodeType":"163","messageId":"164","endLine":4,"endColumn":19},{"ruleId":"161","severity":1,"message":"180","line":5,"column":16,"nodeType":"163","messageId":"164","endLine":5,"endColumn":20},{"ruleId":"161","severity":1,"message":"181","line":159,"column":7,"nodeType":"163","messageId":"164","endLine":159,"endColumn":12},{"ruleId":"161","severity":1,"message":"182","line":164,"column":7,"nodeType":"163","messageId":"164","endLine":164,"endColumn":15},{"ruleId":"161","severity":1,"message":"183","line":182,"column":7,"nodeType":"163","messageId":"164","endLine":182,"endColumn":23},{"ruleId":"161","severity":1,"message":"184","line":189,"column":7,"nodeType":"163","messageId":"164","endLine":189,"endColumn":24},{"ruleId":"161","severity":1,"message":"169","line":5,"column":8,"nodeType":"163","messageId":"164","endLine":5,"endColumn":14},{"ruleId":"165","replacedBy":"185"},{"ruleId":"167","replacedBy":"186"},{"ruleId":"165","replacedBy":"187"},{"ruleId":"167","replacedBy":"188"},{"ruleId":"161","severity":1,"message":"169","line":5,"column":8,"nodeType":"163","messageId":"164","endLine":5,"endColumn":14},{"ruleId":"161","severity":1,"message":"189","line":1,"column":20,"nodeType":"163","messageId":"164","endLine":1,"endColumn":24},{"ruleId":"161","severity":1,"message":"181","line":167,"column":7,"nodeType":"163","messageId":"164","endLine":167,"endColumn":12},{"ruleId":"161","severity":1,"message":"182","line":172,"column":7,"nodeType":"163","messageId":"164","endLine":172,"endColumn":15},{"ruleId":"161","severity":1,"message":"183","line":190,"column":7,"nodeType":"163","messageId":"164","endLine":190,"endColumn":23},{"ruleId":"161","severity":1,"message":"184","line":197,"column":7,"nodeType":"163","messageId":"164","endLine":197,"endColumn":24},{"ruleId":"161","severity":1,"message":"174","line":45,"column":15,"nodeType":"163","messageId":"164","endLine":45,"endColumn":30},{"ruleId":"175","severity":1,"message":"176","line":54,"column":8,"nodeType":"177","endLine":54,"endColumn":10,"suggestions":"190"},{"ruleId":"161","severity":1,"message":"169","line":9,"column":8,"nodeType":"163","messageId":"164","endLine":9,"endColumn":14},{"ruleId":"161","severity":1,"message":"162","line":3,"column":19,"nodeType":"163","messageId":"164","endLine":3,"endColumn":29},{"ruleId":"161","severity":1,"message":"179","line":4,"column":10,"nodeType":"163","messageId":"164","endLine":4,"endColumn":19},{"ruleId":"161","severity":1,"message":"180","line":5,"column":16,"nodeType":"163","messageId":"164","endLine":5,"endColumn":20},{"ruleId":"170","severity":1,"message":"171","line":29,"column":13,"nodeType":"172","messageId":"173","endLine":29,"endColumn":25},"@typescript-eslint/no-unused-vars","'deleteNote' is defined but never used.","Identifier","unusedVar","no-native-reassign",["191"],"no-negated-in-lhs",["192"],"'Colors' is defined but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'filteredResults' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleNoteOptionsClick'. Either include it or remove the dependency array.","ArrayExpression",["193"],"'loadNotes' is defined but never used.","'uuid' is defined but never used.","'Title' is assigned a value but never used.","'AllNotes' is assigned a value but never used.","'AppSidebarButton' is assigned a value but never used.","'AddCategoryButton' is assigned a value but never used.",["191"],["192"],["191"],["192"],"'take' is defined but never used.",["194"],"no-global-assign","no-unsafe-negation",{"desc":"195","fix":"196"},{"desc":"195","fix":"197"},"Update the dependencies array to be: [handleNoteOptionsClick]",{"range":"198","text":"199"},{"range":"200","text":"199"},[2024,2026],"[handleNoteOptionsClick]",[2024,2026]]